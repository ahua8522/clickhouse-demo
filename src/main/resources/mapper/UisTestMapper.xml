<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.clickhouse.mapper.UisTestMapper">

    <select id="selectCount" resultType="long">
        select count()
        from uis_ind_all;
    </select>

    <insert id="insertJson" parameterType="java.lang.String">
        insert into uis_ind_all format JSONEachRow #{jsonString};
    </insert>

    <insert id="insertBath" parameterType="cn.com.clickhouse.pojo.UisTest">
        insert into uis_ind_local (object_pk, order_id, biz_code,
        biz_channel, indicator_ao, id_number,
        user_name, phone, trans_time,
        workflow_code, workflow_name, biz_name,
        biz_channel_name, label, indicator_type,
        indicator_name, create_time, update_time,
        indicator_value)
        values
        <foreach collection="indList" item="item" index="index" separator=",">
            (#{item.objectPk,jdbcType=VARCHAR}, #{item.orderId,jdbcType=VARCHAR}, #{item.bizCode,jdbcType=VARCHAR},
            #{item.bizChannel,jdbcType=VARCHAR}, #{item.indicatorAo,jdbcType=VARCHAR}, #{item.idNumber,jdbcType=VARCHAR},
            #{item.userName,jdbcType=VARCHAR}, #{item.phone,jdbcType=VARCHAR}, #{item.transTime,jdbcType=TIMESTAMP},
            #{item.workflowCode,jdbcType=VARCHAR}, #{item.workflowName,jdbcType=VARCHAR}, #{item.bizName,jdbcType=VARCHAR},
            #{item.bizChannelName,jdbcType=VARCHAR}, #{item.label,jdbcType=INTEGER}, #{item.indicatorType,jdbcType=VARCHAR},
            #{item.indicatorName,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP},
            #{item.indicatorValue,jdbcType=LONGVARCHAR})
        </foreach>
    </insert>

<!--    <select id="getIndicatorType" resultType="java.lang.String" parameterType="java.util.Map" >
        select distinct indicator_type from uis_ind_all
        <include refid="Search_Where_Clause_Indi"/>
        and indicator_type is not null
        and indicator_type != ''
    </select>

    <select id="getMinMaxValue" resultType="java.util.Map" parameterType="java.util.Map" >
        select min(indicator_value) as "min",max(indicator_value) as "max"
        from uis_ind_all
        <include refid="Search_Where_Clause_Indi"/>
        and indicator_value is not null
        and indicator_value != ''
    </select>

    <select id="getNumberList" resultType="java.util.Map" parameterType="java.util.Map"  >
        select b.INTERVALNAME as "intervalName",sum(b.cnt) as "cnt",sum(b.goodtag) as "goodtag",sum(b.badtag) as "badtag",sum(b.emptytag) as "emptytag"
        from(
        select a.intervalName as INTERVALNAME,a.label,count(*) cnt,
        case when a.label=0 then count(*) else 0 end goodtag,
        case when a.label=1 then count(*) else 0 end badtag,
        case when a.label is null then count(*) else 0 end emptytag
        from (
        select indicator_value,label,
        case
        <foreach collection="intervalItmes" item="item">
            <if test="item.endScore == null">
                <choose>
                    <when test="item.startScore != null and  item.startSymbol == '('.toString()">
                        <![CDATA[when toUInt64(indicator_value) > #{item.startScore} then #{item.intervalName} ]]>
                    </when>
                    <when test="item.startScore != null and  item.startSymbol == '['.toString()">
                        <![CDATA[when toUInt64(indicator_value) >= #{item.startScore} then #{item.intervalName} ]]>
                    </when>
                </choose>
            </if>
            <if test="item.startScore == null">
                <choose>
                    <when test="item.endScore != null and  item.endSymbol == ')'.toString()">
                        <![CDATA[when toUInt64(indicator_value) < #{item.endScore} then #{item.intervalName} ]]>
                    </when>
                    <when test="item.endScore != null and  item.endSymbol == ']'.toString()">
                        <![CDATA[when toUInt64(indicator_value) <= #{item.endScore} then #{item.intervalName} ]]>
                    </when>
                </choose>
            </if>
            <if test="item.startScore != null and  item.endScore != null">
                <if test="item.startScore != null and  item.startSymbol == '('.toString()">
                    <![CDATA[when toUInt64(indicator_value) > #{item.startScore} ]]>
                </if>
                <if test="item.startScore != null and  item.startSymbol == '['.toString()">
                    <![CDATA[when toUInt64(indicator_value) >= #{item.startScore} ]]>
                </if>
                <if test="item.endScore != null and  item.endSymbol == ')'.toString()">
                    <![CDATA[and toUInt64(indicator_value) < #{item.endScore} then #{item.intervalName} ]]>
                </if>
                <if test="item.endScore != null and  item.endSymbol == ']'.toString()">
                    <![CDATA[and toUInt64(indicator_value) <= #{item.endScore} then #{item.intervalName} ]]>
                </if>
            </if>
        </foreach>
        else '' end intervalName
        from uis_ind_all
        <include refid="Search_Where_Clause_Indi"/>
        ) a
        group by a.intervalName,a.label
        ) b group by b.INTERVALNAME
    </select>
    <select id="getCharList" resultType="java.util.Map" parameterType="java.util.Map"  >
        select a.indicator_value as "indicatorValue",sum(a.cnt) as "cnt",sum(a.goodtag) as "goodtag",sum(a.badtag) as "badtag",sum(a.emptytag) as "emptytag"
        from (
        select indicator_value,1 cnt,
        case when label=0 then 1 else 0 end goodtag,
        case when label=1 then 1 else 0 end badtag,
        case when label is null then 1 else 0 end emptytag
        from uis_ind_all
        <include refid="Search_Where_Clause_Indi"/>
        ) a group by a.indicator_value
    </select>


    <sql id="Search_Where_Clause_Indi">
        <where>
            indicator_name=#{indname,jdbcType=VARCHAR}
            <if test="startTime != null and startTime != ''">
                <![CDATA[ AND trans_time>= toDateTime(#{startTime}) ]]>
            </if>
            <if test="endTime != null and endTime != ''">
                <![CDATA[ AND trans_time<= toDateTime(#{endTime}) ]]>
            </if>
            <if test="bizChannel != null and bizChannel !=''">
                AND biz_channel = #{bizChannel,jdbcType=VARCHAR}
            </if>
            <if test="bizChannelList != null and bizChannelList.size() != 0">
                and BIZ_CHANNEL in
                <foreach collection="bizChannelList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="bizCode != null and bizCode!=''">
                AND biz_code = #{bizCode,jdbcType=VARCHAR}
            </if>
            <if test="flowId != null and flowId !='' and flowId !='other'">
                AND workflow_code = #{flowId,jdbcType=VARCHAR}
            </if>
            <if test="flowId != null and flowId !='' and flowId =='other'">
                AND workflow_code is null
            </if>
            <if test="userId != null and userId !=''">
                AND object_pk = #{userId,jdbcType=VARCHAR}
            </if>
            <if test="idNo != null and idNo !=''">
                AND id_number = #{idNo,jdbcType=VARCHAR}
            </if>
            <if test="name != null and name !=''">
                AND user_name like CONCAT(#{name,jdbcType=VARCHAR},'%')
            </if>
            <if test="phone != null and phone !=''">
                AND phone = #{phone,jdbcType=VARCHAR}
            </if>
        </where>
    </sql>-->
</mapper>

